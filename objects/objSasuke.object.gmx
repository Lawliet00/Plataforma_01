<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSasuke</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
image_speed = 0.5;

//Movimiento
intVY = 0;
intVX = 0;
intMove = 0;

intMultiplier = 1.0; //Multiplicador

intVYMax       = 9    * intMultiplier; 
intVXMax       = 10  * intMultiplier;
intJumpHeight  = 8    * intMultiplier;
intGravityNorm = 0.5  * intMultiplier;
intGroundAcc   = 1.0  * intMultiplier;
intGroundFric  = 1.9  * intMultiplier;
intAirAcc      = 0.75 * intMultiplier;
intAirFric     = 0.05  * intMultiplier;


bolDJump = true;
bolDirectionPrev = true;   // true: right, false: left


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Desplazamiento
var keyLeft, keyRight, keyJump, keyJumpRelease;

keyLeft        = -keyboard_check(vk_left);
keyRight       = keyboard_check(vk_right);

keyJump        = keyboard_check_pressed(vk_up);
keyJumpRelease = keyboard_check_released(vk_up);

//Comprobacion de coliciones
intColRight = scrColition("horizontal", 1);
intColLeft  = scrColition("horizontal", -1);

bolGround = scrColition("vertical", sign(intVY));

intMove = keyLeft + keyRight;

//Definir aceleracion y friccion en funcion del medio
if(!bolGround){
    intTempAcc  = intAirAcc;
    intTempFric = intAirFric;
}
else{
    intTempAcc  = intGroundAcc;
    intTempFric = intGroundFric;
}

//Velocidad horizontal
if(intMove != 0) intVX = scrApproach(intVX, intVXMax * intMove, intTempAcc);
else intVX = scrApproach(intVX, intVXMax * intMove, intTempFric);

//Velocidad Vertical
if(!bolGround){
    intVY = scrApproach(intVY, intVYMax, intGravityNorm); // Caida libre
}
else{
    if(!bolDJump) bolDJump = true;
}

//Salto
if(keyJump &amp;&amp; bolGround) intVY = -intVYMax;

//Doble Salto
if(keyJump &amp;&amp; !bolGround &amp;&amp; bolDJump){
    intVY = -intVYMax;
    bolDJump = false;
}

//Liberaci√≥n de salto
if(keyJumpRelease){
    if(intVY &lt; 0) intVY *= 0.5;
}

//Colicion horizontal
repeat(abs(intVX)){

    //Cuesta arriba
    if place_meeting(x+sign(intVX),y, objBloque) &amp;&amp;
       !place_meeting(x+sign(intVX),y-1, objBloque) y--;
    
    //Cuesta Abajo
    if !place_meeting(x+sign(intVX),y, objBloque)   &amp;&amp; 
       !place_meeting(x+sign(intVX),y+1, objBloque) &amp;&amp;
       place_meeting(x+sign(intVX),y+2, objBloque) y++;

    if(!scrColition("horizontal", sign(intVX))){
        x += sign(intVX);
    }
    else{
        intVX = 0;
        break;
    }
}

//Colicion vertical
repeat(abs(intVY)){
    if(scrColition("vertical", sign(intVY))){
        intVY = 0;
        break;
    }
    else{
        y += sign(intVY);
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animacion

//Cambio de sprite
if(intMove == 0){
    if(!bolDirectionPrev) {
        if(!bolGround) sprite_index = sprSasukeJumpLeft;
        else sprite_index = sprSasukeLeft;
    }

    if(bolDirectionPrev){
        if(!bolGround) sprite_index = sprSasukeJump;
        else sprite_index = sprSasuke;
    }
}
//cambio de sprite

if(intMove &lt; 0){
    bolDirectionPrev = false;
    if(bolGround){
        if(intVX != 0) {
            sprite_index = sprSasukeWalkLeft;
        }else{
            sprite_index = sprSasukeLeft;
        }
    }
    else{
        sprite_index = sprSasukeJumpLeft;
    }
}
if(intMove &gt; 0){
    bolDirectionPrev = true;
    if(bolGround){
        if(intVX != 0) {
            sprite_index = sprSasukeWalk;
        }else{
            sprite_index = sprSasuke;
        }
    }
    else{
        sprite_index = sprSasukeJump;
    }
}




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cuestas
/*



*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>41,41</point>
  </PhysicsShapePoints>
</object>
